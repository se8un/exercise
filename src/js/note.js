'use strict'

//_/_/_/_/_/_/_/_/_/_/_/   NOTE   _/_/_/_/_/_/_/_/_/_/_/_/

// let –∏ const –æ–±–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã –±–ª–æ–∫–æ–º, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–Ω–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–∞—è –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏, —á–µ–º var –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã —Ñ—É–Ω–∫—Ü–∏–µ–π, –≤ –∫–æ—Ç–æ—Ä–æ–π –æ–Ω–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã.

// // –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏ –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏, –û–ö –∏ –û—Ç–º–µ–Ω–∞.
// confirm('message') // Returns true if confirmed, false otherwise
// // –ø—Ä–∏–º–µ—Ä
// if (confirm('Are you sure you want to delete this post?')) {
//   deletePost();
// }

//_/_/_/

// —Ç–æ —á—Ç–æ –¥–µ–∫–ª–∞—Ä–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è –Ω–∞–≤–µ—Ä—Ö, —Ö–æ–π—Ç–∏—Å—Ç—å—Å—è:
// function (){} // function declaration
// var a // var –¥–µ–∫–ª–∞—Ä–∏—Ä—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∞
// let –∏ const –Ω–µ —Ö–æ–π—Ç—è—Ç—å—Å—è –Ω–∞–≤–µ—Ä—Ö
// —Ç–æ —á—Ç–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ –Ω–µ —Ö–æ–π—Å—Ç–∏—Ç—å—Å—è, (–∫–æ–≥–¥–∞ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º, =)

//_/_/_/

// –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Å—Ç—Ä–æ–∫ ‚Äì –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ - ''
// –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Å–ª–æ–∂–µ–Ω–∏—è, –≤—ã—á–∏—Ç–∞–Ω–∏—è ‚Äì 0
// –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —É–º–Ω–æ–∂–µ–Ω–∏—è, –¥–µ–ª–µ–Ω–∏—è ‚Äì 1

//_/_/_/

// console.log(0 || 1) // 1 (|| –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –ø–µ—Ä–≤—ã–π true)
// console.log(0 && 1) // 0 (&& –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –ø–µ—Ä–≤—ã–π false)
// 0, '', undefined, NaN, null –ø—Ä–∏–≤–æ–¥—è—Ç—Å—è –∫ false. –≠—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞–∑—ã–≤–∞—é—Ç falsy.
// –í—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–æ–¥–∏—Ç—Å—è –∫ true
// console.log('' === false); // => false (–ø–æ –∑–Ω–∞—á–µ–Ω–∏—é –Ω–µ —Ä–∞–≤–Ω—ã)
// console.log('' == false);  // => true (–ø–æ —Ç–∏–ø—É –æ–±–∞ false)
// 234 || '' // 234
// undefined || '' // ''
// 'hex' || '' // 'hex'

// —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –¥–≤–æ–π–Ω–æ–≥–æ –æ—Ç—Ä–∏—Ü–∞–Ω–∏—è –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç bool. –≠—Ç–∏–º –ø—Ä–∏–µ–º–æ–º –ø–æ–ª—å–∑—É—é—Ç—Å—è, —á—Ç–æ–±—ã –ø–æ–º–µ–Ω—è—Ç—å —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö.

// // –≤–∏—Å–∞–∫–æ—Å–Ω—ã–π –ª–∏ –≥–æ–¥
// const isLeapYear = year => year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0)
// console.log(isLeapYear(2020)) // true
// console.log(isLeapYear(2021)) // false

// –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –≤—ã—à–µ –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö.–ó–Ω–∞—á–∏—Ç, —Å–Ω–∞—á–∞–ª–∞ –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ number % 2, –∑–∞—Ç–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ –ª–æ–≥–∏—á–µ—Å–∫–æ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏.
// const isEven = (number) => number % 2 === 0;

// js doc —Å–æ–∑–¥–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞
/** */

//_/_/_/

/* 
// –§—É–Ω–∫—Ü–∏–∏-–ø—Ä–µ–¥–∏–∫–∞—Ç—ã (–∏–ª–∏ —Ñ—É–Ω–∫—Ü–∏–∏-–≤–æ–ø—Ä–æ—Å—ã) –æ—Ç–≤–µ—á–∞—é—Ç –Ω–∞ –∫–∞–∫–æ–π-—Ç–æ –≤–æ–ø—Ä–æ—Å –∏ –≤—Å–µ–≥–¥–∞ (–±–µ–∑ –∏—Å–∫–ª—é—á–µ–Ω–∏–π!) –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –ª–∏–±–æ true, –ª–∏–±–æ false.
const isInfant = age => age < 1
console.log(isInfant(3)) // false

// –ü—Ä–µ–¥–∏–∫–∞—Ç—ã –≤–æ –≤—Å–µ—Ö —è–∑—ã–∫–∞—Ö –ø—Ä–∏–Ω—è—Ç–æ –∏–º–µ–Ω–æ–≤–∞—Ç—å –æ—Å–æ–±—ã–º –æ–±—Ä–∞–∑–æ–º –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –∞–Ω–∞–ª–∏–∑–∞. –í JavaScript –ø—Ä–µ–¥–∏–∫–∞—Ç—ã, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –ø—Ä–µ—Ñ–∏–∫—Å–∞ is, has –∏–ª–∏ can, –Ω–æ –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã —ç—Ç–∏–º–∏ —Å–ª–æ–≤–∞–º–∏. –ü—Ä–∏–º–µ—Ä—ã:
isInfant() //‚Äî ¬´–º–ª–∞–¥–µ–Ω–µ—Ü –ª–∏?¬ª
hasChildren() //‚Äî ¬´–µ—Å—Ç—å –ª–∏ –¥–µ—Ç–∏?¬ª
isEmpty() //‚Äî ¬´–ø—É—Å—Ç–æ–π –ª–∏?¬ª
hasErrors() //‚Äî ¬´–µ—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∏?¬ª
// –§—É–Ω–∫—Ü–∏—è –º–æ–∂–µ—Ç —Å—á–∏—Ç–∞—Ç—å—Å—è –ø—Ä–µ–¥–∏–∫–∞—Ç–æ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç bool.
 */

//_/_/_/_/_/_/_/_/_/_/_/   IF ELSE | SWITCH   _/_/_/_/_/_/_/_/_/_/_/_/

// // else if
// // –≠—Ç–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ else –∑–∞—è–≤–ª–µ–Ω–∏–µ, –Ω–æ —Å–æ —Å–≤–æ–∏–º —É—Å–ª–æ–≤–∏–µ–º. –û–Ω –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –µ–≥–æ —É—Å–ª–æ–≤–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ, –∞ —É—Å–ª–æ–≤–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –±—ã–ª–æ –ª–æ–∂–Ω—ã–º.
// // –§–æ—Ä–º–∞: –∏–Ω–∞—á–µ, –µ—Å–ª–∏. –ï—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ, –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –æ–ø–µ—Ä–∞—Ç–æ—Ä1. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è —É—Å–ª–æ–≤–∏–µ 2. –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–∞–≤–¥–∞, —Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä 2. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –∏—Å—Ç–∏–Ω–∞, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä 3.
// if (condition1) {
//   statement1;
// } else if (condition2) {
//   statement2;
// } else {
//   statement3;
// }

// // —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π if else
// let defaultName
// if (username) {
//   defaultName = username
// } else {
//   defaultName = 'Stranger'
// }
// // –≤–∞—Ä–∏–∞–Ω—Ç —Å –ò–õ–ò
// let defaultName = username || 'Stranger'

//_/_/_/

// switch –∏–º–µ–µ—Ç —Å–º—ã—Å–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–∞–º, –≥–¥–µ –µ—Å—Ç—å —Ü–µ–ø–æ—á–∫–∞ if else —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ –Ω–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ

// –í–Ω–µ—à–Ω–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–µ –≤—Ö–æ–¥–∏—Ç –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ switch. –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –ø–æ –∑–Ω–∞—á–µ–Ω–∏—è–º –∫–æ—Ç–æ—Ä–æ–π switch –±—É–¥–µ—Ç –≤—ã–±–∏—Ä–∞—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ. –ò —Ñ–∏–≥—É—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏ –¥–ª—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≤—ã–±–æ—Ä–∞.

// –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ case –∏ default, –≤–Ω—É—Ç—Ä–∏ –∫–æ—Ç–æ—Ä—ã—Ö –æ–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –ø–æ–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π. –ö–∞–∂–¥—ã–π case —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç if –≤ –ø—Ä–∏–º–µ—Ä–µ –≤—ã—à–µ. default - —ç—Ç–æ –æ—Å–æ–±–∞—è —Å–∏—Ç—É–∞—Ü–∏—è, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è –≤–µ—Ç–∫–µ else –≤ —É—Å–ª–æ–≤–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è—Ö. –ö–∞–∫ else, —É–∫–∞–∑—ã–≤–∞—Ç—å default –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ (–Ω–æ –ª–∏–Ω—Ç–µ—Ä –≤—Å–µ–≥–¥–∞ –µ–≥–æ –ø—Ä–æ—Å–∏—Ç).

// break –Ω—É–∂–µ–Ω –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è ¬´–ø—Ä–æ–≤–∞–ª–∏–≤–∞–Ω–∏—è¬ª. –ï—Å–ª–∏ –µ–≥–æ –Ω–µ —É–∫–∞–∑–∞—Ç—å, —Ç–æ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω—É–∂–Ω–æ–≥–æ case –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–π–¥–µ—Ç –∫ —Å–ª–µ–¥—É—é—â–µ–º—É case, –∏ —Ç–∞–∫ –ª–∏–±–æ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ break, –ª–∏–±–æ –¥–æ –∫–æ–Ω—Ü–∞ switch.

// –§–∏–≥—É—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏ –≤ switch –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç –±–ª–æ–∫ –∫–æ–¥–∞, –∫–∞–∫ —ç—Ç–æ –±—ã–ª–æ –≤ –¥—Ä—É–≥–∏—Ö –º–µ—Å—Ç–∞—Ö. –í–Ω—É—Ç—Ä–∏ –¥–æ–ø—É—Å—Ç–∏–º —Ç–æ–ª—å–∫–æ —Ç–æ—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑–∞–Ω –≤—ã—à–µ. –¢–æ –µ—Å—Ç—å —Ç–∞–º –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å case –∏–ª–∏ default. –ê –≤–æ—Ç –≤–Ω—É—Ç—Ä–∏ –∫–∞–∂–¥–æ–≥–æ case (–∏ default) —Å–∏—Ç—É–∞—Ü–∏—è –¥—Ä—É–≥–∞—è. –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –ª—é–±–æ–π –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –∫–æ–¥:

/* 
switch (count) {
  case 1:
    // –î–µ–ª–∞–µ–º —á—Ç–æ-—Ç–æ –ø–æ–ª–µ–∑–Ω–æ–µ
    break
  case 2:
    // –î–µ–ª–∞–µ–º —á—Ç–æ-—Ç–æ –ø–æ–ª–µ–∑–Ω–æ–µ
    break
  default:
  // –ß—Ç–æ-—Ç–æ –¥–µ–ª–∞–µ–º
} 
*/

/* 
switch (status) {
  case 'processing': // status == processing
    // –î–µ–ª–∞–µ–º —Ä–∞–∑
    break;
  case 'paid': // status == paid
    // –î–µ–ª–∞–µ–º –¥–≤–∞
    break;
  case 'new': // status == new
    // –î–µ–ª–∞–µ–º —Ç—Ä–∏
    break;
  default: // else
    // –î–µ–ª–∞–µ–º —á–µ—Ç—ã—Ä–µ
}
*/

//_/_/_/
/* 
const getNumberExplanation = (num) => {
	switch (num) {
	case 7:
		return 'prime number'
	case 42:
		return 'answer for everything'
	case 666:
		return 'devil number'
	default:
		return null
}
} */

//_/_/_/

// // switch
// const food = 'salad'
// switch (food) {
//   case 'oyster':
//     console.log('The taste of the sea ü¶™')
//     break
//   case 'pizza':
//     console.log('A delicious pie üçï')
//     break
//   default:
//     console.log('Enjoy your meal')
// } // Prints: Enjoy your meal

//_/_/_/_/_/_/_/_/_/_/_/   LOOPS i++  _/_/_/_/_/_/_/_/_/_/_/_/

// –ö–æ–≥–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π –∏–∑–≤–µ—Å—Ç–Ω–æ, –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ü–∏–∫–ª for.

// // —Ü–∏–∫–ª for in —Å –û–±—ä–µ–∫—Ç–∞–º–∏ –º–æ–∂–µ—Ç –±—Ä–∞—Ç—å –∫–ª—é—á –∏ –∑–Ω–∞—á–µ–Ω–∏–µ
// let mobile = { brand: 'Samsung', model: 'Galaxy Note 9' }
// for (let key in mobile) {
//   console.log(`${key}: ${mobile[key]}`)
// }
// // brand: Samsung
// // model: Galaxy Note 9

//_/_/_/

// // —Ü–∏–∫–ª for in —Å –ú–∞—Å—Å–∏–≤–∞–º–∏ –≤—ã–≤–æ–¥–∏—Ç –∏–Ω–¥–µ–∫—Å—ã
// // —Ü–∏–∫–ª for of –≤—ã–≤–æ–¥–∏—Ç –∏–º–µ–Ω–∞
// const fruits = ['apple', 'banana', 'orange']
// for (const fru in fruits) {
//   console.log(fru) // for in: 0 1 2
//   console.log(fru) // for of: apple	banana orange
// }

//_/_/_/

// // —Ç–∞–±–ª–∏—Ü–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è
// // —Ñ –ø–µ—á–∞—Ç–∞–µ—Ç —Ü–∏—Ñ—Ä—ã –∏ —Ç–∞–±–∞–º–∏ –≤ —Å—Ç—Ä–æ–∫—É
// function printLine(n) {
//   let text = ''
//   for (let i = 1; i <= 7; i++) {
//     text += i * n + '\t'
//   }
//   console.log(text)
// }
// // —Ü–∏–∫–ª –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ñ –∏ –≤—ã–≤–æ–¥–∏—Ç —Å—Ç—Ä–æ–∫–∏ –∏ —Å—Ç–æ–ª–±—Ü—ã
// for (let i = 1; i <= 5; i++) {
//   console.log('-'.repeat(50))
//   printLine(i)
// }

//_/_/_/

// // —Ü–∏–∫–ª for
// for (let counterOne = 1; counterOne < 4; counterOne++) {
//   console.log(counterOne) // 1 2 3
// }

//_/_/_/

// // –≤–ª–æ–∂–µ–Ω—ã–π —Ü–∏–∫–ª for
// for (let outer = 0; outer < 2; outer += 1) {
//   for (let inner = 0; inner <= 5; inner += 1) {
//     console.log(`${outer}-${inner}`)
//   }
// }

//_/_/_/

// –¶–∏–∫–ª while –∏–¥–µ–∞–ª–µ–Ω –¥–ª—è —Å–∏—Ç—É–∞—Ü–∏–π, –∫–æ–≥–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ –∑–∞—Ä–∞–Ω–µ–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —á–∏—Å–ª–∞. –ö–æ–≥–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π –∏–∑–≤–µ—Å—Ç–Ω–æ, –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ü–∏–∫–ª for.

// // —Å—É–º–º–∞ —á–∏—Å–µ–ª –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –¥–æ –≤—Ç–æ—Ä–æ–≥–æ –≤–∫–ª
// const sum = (num1, num2) => {
//   let res = 0
//   while (num1 <= num2) {
//     res += num1
//     num1++
//   }
//   return res
// }
// console.log(sum(1, 10)) // 55

//_/_/_/

// // —Ü–∏–∫–ª while loop
// let counterTwo = 1
// while (counterTwo < 4) {
//   console.log(counterTwo) // 1 2 3
//   counterTwo++
// }

//_/_/_/_/_/_/_/_/_/_/_/   ARRAY []   _/_/_/_/_/_/_/_/_/_/_/_/

/*
–í—Å–µ –º–µ—Ç–æ–¥—ã –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–∏–Ω–∏–º–∞—é—Ç —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞, –∏–ª–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∏–ª–∏ —Ñ—É–Ω–∫—Ü–∏—é —Å—Ç—Ä–µ–ª–∫–∏. 

.forEach () –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ –∫–æ–¥–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ, –Ω–æ –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç –º–∞—Å—Å–∏–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç undefined.

.map () –≤—ã–ø–æ–ª–Ω—è–µ—Ç –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –∫–æ–¥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏.

.reduce () –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∏—Ç–µ—Ä–∞—Ü–∏—é –ø–æ –º–∞—Å—Å–∏–≤—É, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ.

.filter () –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –æ–Ω –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º, –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –∏—Å—Ç–∏–Ω–Ω–æ—Å—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤.

.findIndex () –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞, –∫–æ—Ç–æ—Ä—ã–π —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏—é –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞. –û–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç -1, –µ—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ –Ω–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏—é.
*/

//_/_/_/

/*
.splice() –û—Ç—Å—á–∏—Ç—ã–≤–∞–µ–º–æ–µ –æ—Ç –Ω—É–ª—è –º–µ—Å—Ç–æ –≤ –º–∞—Å—Å–∏–≤–µ, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–ª–µ–¥—É–µ—Ç –Ω–∞—á–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –£–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –º–∞—Å—Å–∏–≤–∞ –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–∞ –∏—Ö –º–µ—Å—Ç–æ –Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –≤–æ–∑–≤—Ä–∞—â–∞—è —É–¥–∞–ª–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã. !splice –∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤!

*/

//_/_/_/

/* 
Array.prototype.reduce()
–°—É–º–º–∞ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞.
–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ —á–∏—Å–ª–∞ –≤ —Å—Ç—Ä–æ–∫–∏.
–°–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞, –∏–∑ –¥–≤—É–º–µ—Ä–Ω–æ–≥–æ –≤ –æ–¥–Ω–æ–º–µ—Ä–Ω—ã–π.
–ù–∞–π—Ç–∏ –Ω–∞–∏–±–æ–ª—å—à–µ–µ —á–∏—Å–ª–æ –≤ –º–∞—Å—Å–∏–≤–µ.
–ò–∑–≤–ª–µ—á—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –º–∞—Å—Å–∏–≤–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä id –æ–±—ä–µ–∫—Ç–∞.
 */

//_/_/_/

/* 
Array.prototype.forEach()
—Ü–∏–∫–ª for in —Å –º–∞—Å—Å–∏–≤–∞–º–∏ –≤—ã–≤–æ–¥–∏—Ç –∏–Ω–¥–µ–∫—Å—ã
—Ü–∏–∫–ª for of —Å –º–∞—Å—Å–∏–≤–∞–º–∏ –≤—ã–≤–æ–¥–∏—Ç –∏–º–µ–Ω–∞
—É –º–∞—Å—Å–∏–≤–æ–≤ –µ—Å—Ç—å forEach() –∑–∞–º–µ–Ω—è–µ—Ç —Ä–∞–±–æ—Ç—É —Å —Ü–∏–∫–ª–æ–º + –±–æ–ª–µ–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–Ω
 */

//_/_/_/

// // —Å—Ä–∞–≤–Ω–∏—Ç—å –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ –∏ —É–∑–Ω–∞—Ç—å –æ–±—â–µ–µ —á–∏—Å–ª–æ —á–µ—Ä–µ–∑ –≤–ª–æ–∂–µ–Ω—ã–π —Ü–∏–∫–ª
// const myArray = [6, 19, 20]
// const yourArray = [19, 81, 2]
// for (let i = 0; i < myArray.length; i++) {
//   for (let j = 0; j < yourArray.length; j++) {
//     if (myArray[i] === yourArray[j]) {
//       console.log('–û–±—â–µ–µ —á–∏—Å–ª–æ: ' + yourArray[j])
//     }
//   }
// }

//_/_/_/

// // —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å –Ω–æ–º–µ—Ä–∞ –∏–Ω–¥–µ–∫—Å–∞ –≤–∫–ª, –¥–æ –∫–æ–Ω—Ü–∞.
// let arr = [22, 33, 44, 55, 66, 77, 88, 99]
// let sl = arr.slice(3)
// console.log(arr) // arr –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è
// console.log(sl) // [ 55, 66, 77, 88, 99 ]

//_/_/_/_/_/_/_/_/_/_/_/   STRING '' "" ``  _/_/_/_/_/_/_/_/_/_/_/_/

'my name'.toUpperCase() // Returns 'MY NAME'
'MY NAME'.toLowerCase() // Returns 'my name'

// string.trim() –£–¥–∞–ª—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã —Å –æ–±–æ–∏—Ö –∫–æ–Ω—Ü–æ–≤ —Å—Ç—Ä–æ–∫–∏.
'       a        '.trim() // 'a'
'     a  a       '.trim() // 'a  a'

// .replace() –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –ø–µ—Ä–≤–∞—è —Å–æ–≤–ø–∞–¥–∞—é—â–∞—è –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ –∑–∞–º–µ–Ω–µ–Ω–∞ –Ω–æ–≤–æ–π –ø–æ–¥—Å—Ç—Ä–æ–∫–æ–π.
'original string'.replace('original', 'replaced') // 'replaced string'

// .charAt() –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª –∏–∑ —Å—Ç—Ä–æ–∫–∏
'Hello World!'.charAt(0) // 'H'
'Hello World!'.charAt(234) // ''

// .substring() –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∏–º–≤–æ–ª–æ–≤ –º–µ–∂–¥—É –¥–≤—É–º—è –∏–Ω–¥–µ–∫—Å–∞–º–∏ –≤ —Å—Ç—Ä–æ–∫–µ.
'adventures'.substring(2, 9) // 'venture'
'hello'.substring(1) // 'ello'

// .indexOf() –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è, -1 –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.
'My name is very long.'.indexOf('name') // 3

//_/_/_/

// // –ù–∞ prompt()—ç–∫—Ä–∞–Ω–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ , –ø—Ä–µ–¥–ª–∞–≥–∞—é—â–µ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É ¬´–û—Ç–º–µ–Ω–∏—Ç—å¬ª, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ null.
// prompt(message)
// // –ü—Ä–∏–º–µ—Ä
// let name = prompt('Enter your name:')
// console.log('Hello ' + name + '!')

//_/_/_/

// —Å–¥–µ–ª–∞—Ç—å –±—É–∫–≤—É –±–æ–ª—å—à–æ–π —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω—ã–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫
// // v1
// const makeItFunny = (str, n) => {
//   let nStart = n
//   let res = ''
//   let i = 0
//   while (i < str.length) {
//     if (i === n - 1) {
//       res += str[i].toUpperCase()
//       n += nStart
//     } else {
//       res += str[i]
//     }
//     i++
//   }
//   return res
// }
// console.log(makeItFunny('I never look back', 3)) // 'I NevEr LooK bAck'

// // v2
// const makeItFunny = (str, n) => {
//   let res = ''
//   let i = 0
//   while (i < str.length) {
//     if ((i + 1) % n === 0) {
//       res += str[i].toUpperCase()
//     } else {
//       res += str[i]
//     }
//     i++
//   }
//   return res
// }
// console.log(makeItFunny('I never look back', 3)) // 'I NevEr LooK bAck'

//_/_/_/

/* 
// –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏ —Å–∏–º–≤–æ–ª, –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É, –≤ –∫–æ—Ç–æ—Ä–æ–π —É–¥–∞–ª–µ–Ω –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª.
const filterString = (str, simbol) => {
  let res = ''
  let i = 0
  while (i <= str.length - 1) {
    if (str[i].toLowerCase() !== simbol.toLowerCase()) {
      res += str[i]
    }
    i++
  }
  return res
}
const str = 'If I look back I am lost'
console.log(filterString(str, 'I')) // 'f  look back  am lost') */

//_/_/_/

// // —Å–∫–æ–ª—å–∫–æ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –±—É–∫–≤—ã
// const countChars = (str, char) => {
//   let i = 0
//   let count = 0
//   while (i < str.length) {
//     if (str[i].toLowerCase() === char.toLowerCase()) {
//       count++
//     }
//     i++
//   }
//   return count
// }

//_/_/_/

// // —Ç—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–≤—É—é –±—É–∫–≤—É –±–æ–ª—å—à–æ–π
// const capitalize = word => word.slice(0, 1).toUpperCase() + word.slice(1)
// const capitalize = word => word[0].toUpperCase() + word.slice(1)
// const capitalize = text => `${text[0].toUpperCase()}${text.slice(1)}`
// console.log(capitalize('aag'))

//_/_/_/

// // 16 –∑–Ω–∞—á–Ω—ã–π –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã —Å–∫—Ä—ã–≤–∞–µ—Ç –≤—Å–µ —Ü–∏—Ñ—Ä—ã –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 4
// const getHiddenCard = (cardNumber, starsCount = 4) => {
//   const visibleDigits = cardNumber.slice(12)
//   return visibleDigits.padStart(starsCount + 4, '*')
// } // ****1011

//_/_/_/

/* 
// String.prototype.padStart()
// –î–æ–ø–æ–ª–Ω—è–µ—Ç —Å—Ç—Ä–æ–∫—É "–∑–∞–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º" —Å–ª–µ–≤–∞, –¥–æ —Ç–µ—Ö –ø–æ—Ä –ø–æ–∫–∞ –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –Ω–µ —Å—Ç–∞–Ω–µ—Ç —Ä–∞–≤–Ω–æ–π —É–∫–∞–∑–∞–Ω–Ω–æ–π.–ü–µ—Ä–≤—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∂–µ–ª–∞–µ–º—É—é –¥–ª–∏–Ω—É —Å—Ç—Ä–æ–∫–∏, –≤—Ç–æ—Ä—ã–º ‚Äì –∑–∞–ø–æ–ª–Ω–∏—Ç–µ–ª—å.
'5'.padStart(2, '*') // '*5'
'10'.padStart(4, '+') // '++10'
 */

/* //_/_/_/
// –°–¢–†–û–ö–ò 2020
// –º–µ—Ç–æ–¥ trim. trimStart, trimEnd —É–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–±–µ–ª—ã –≤ —Å—Ç—Ä–æ–∫–∞—Ö
const start = '                   Hello '
const end = 'This is new JS     '
// –≤–∞—Ä–∏–∞–Ω—Ç 1
console.log(start.trimStart() + end.trimEnd()) // Hello This is new JS
// –≤–∞—Ä–∏–∞–Ω—Ç 2
console.log((start + end).trim()) // Hello This is new JS

// padStart(5) –¥–æ–±–∞–≤–ª—è–µ—Ç 6 —Å–∏–º–≤–æ–ª–æ–≤ –ø–µ—Ä–µ–¥ —É–∫–∞–∑–∞–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π, –≤—Ç–æ—Ä–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ www. –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ —É–∫–∞–∑–∞—Ç—å —Ç–æ –±—É–¥—É—Ç –ø—Ä–æ–±–µ–ª—ã.
console.log('vk'.padStart(6, 'www.')) // out: www.vk
// –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü —Å—Ç–æ–∫–∏
console.log('vk'.padEnd(6, '.com')) // out: vk.com
//_/_/_/ */

// // –ø–æ–º–µ–Ω—è—Ç—å –±—É–∫–≤—ã –º–µ—Å—Ç–∞–º–∏
// v1
// let nameBrienna = 'Brienna'.split('').reverse().join('')
// console.log(nameBrienna)

// v2
// const reverseString = str => {
//   let res = ''
//   for (let i = 0; i < str.length; i++) {
//     res = str[i] + res
//   }
//   return res
// }
// console.log(reverseString('Kilka v Tomate')) // etamoT v akliK

//_/_/_/

// // –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —á–∞—Å—Ç—å —Å—Ç—Ä–æ–∫–∏
// let str = 'hello'
// console.log(str.slice(1, 4)) // ell

//_/_/_/_/_/_/_/_/_/_/_/   NUMBER 0-9  _/_/_/_/_/_/_/_/_/_/_/_/

// –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç—ã—Ö —á–∏—Å–µ–ª - –∏–º–µ—é—â–µ–µ —Ä–æ–≤–Ω–æ –¥–≤–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö –¥–µ–ª–∏—Ç–µ–ª—è ‚Äî –µ–¥–∏–Ω–∏—Ü—É –∏ —Å–∞–º–æ–≥–æ —Å–µ–±—è
// –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ—Å—Ç—ã—Ö —á–∏—Å–µ–ª –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ç–∞–∫:
// 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199‚Ä¶

//_/_/_/

// isNaN() –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Å—Ç–∏–Ω—É, –µ—Å–ª–∏ –¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º, –∏–Ω–∞—á–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ª–æ–∂—å.
// // const userInput = prompt('Enter a number'); // "Enter a number"
// if (isNaN(userInput)) {
//   console.log('I told you to enter a number.');
// }
// // console.log executed since 'a number' is not a number
// // Another important thing:
// if (isNaN('3')) {
//   console.log('bad');
// }
// Not executed because the string "3" gets converted into 3, and 3 is a number

//_/_/_/

// // —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ.
// //(0 - 0, 9), —É–º–Ω–æ–∂–∞–µ–º –Ω–∞ 5(0 - 4, 9), –æ–∫—Ä—É–≥–ª—è–µ–º –≤–Ω–∏–∑(0 - 4)
// console.log(Math.floor(Math.random() * 5)) // 0 - 4
// console.log(Math.ceil(Math.random() * 5)) // 1 - 5

//_/_/_/

// // —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–∏—Å–ª–∞ –Ω–∞ —á–µ—Ç–Ω–æ—Å—Ç—å
// const isEven = n => n % 2 == 0

//_/_/_/

// // –ß—Ç–æ–±—ã —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π –±–∏–Ω–∞—Ä–Ω—ã–º –ø–æ–∏—Å–∫–æ–º, –º—ã –º–æ–∂–µ–º –≤–∑—è—Ç—å –ª–æ–≥–∞—Ä–∏—Ñ–º:
// console.log(Math.log2(4000000000))

//_/_/_/_/_/_/_/_/_/_/_/   FUNCTION() {}  _/_/_/_/_/_/_/_/_/_/_/_/

// // –£ –∫–∞–∂–¥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∏–ª–∏ –º–µ—Ç–æ–¥–∞ –µ—Å—Ç—å this –∫–æ–Ω—Ç–µ–∫—Å—Ç. –î–ª—è —Ñ—É–Ω–∫—Ü–∏–∏, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –≤–Ω—É—Ç—Ä–∏ –æ–±—ä–µ–∫—Ç–∞, this –±—É–¥–µ—Ç —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ —Å–∞–º —ç—Ç–æ—Ç –æ–±—ä–µ–∫—Ç. –î–ª—è —Ñ—É–Ω–∫—Ü–∏–∏, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –≤–Ω–µ –æ–±—ä–µ–∫—Ç–∞, this –±—É–¥–µ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç  window –≤ –±—Ä–∞—É–∑–µ—Ä–µ, global –≤ Node.js
// const restaurant = {
//   numCustomers: 45,
//   seatCapacity: 100,
//   availableSeats() {
//     // this refers to the restaurant object
//     // and it's used to access its properties
//     return this.seatCapacity - this.numCustomers
//   },
// }

//_/_/_/
/*
// –±–ª–∞–≥–æ–¥–æ—Ä—è —Ç–∞–∫–æ–º—É —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—É –º—ã –º–æ–∂–µ–º –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –∏ –∏–∑–º–µ–Ω—è—Ç—å —Å—Ç—Ä–æ—á–∫–∏
function tag(strings, name, age) {
  const [s1, s2, s3] = strings
  const ageStr = age > 42 ? '—Å—Ç–∞—Ä—à–∏–º' : '–º–ª–∞–¥—à–∏–º'
  return `${s1}${name}${s2}${ageStr}${s3}`
}
const person = {
  name: 'Max',
  age: 50,
}
const output = tag`–ß–µ–ª–æ–≤–µ–∫ –ø–æ –∏–º–µ–Ω–∏ ${person.name} —è–≤–ª—è–µ—Ç—å—Å—è ${person.age} –≤ —Å–µ–º—å–µ!`
console.log(output) // –ß–µ–ª–æ–≤–µ–∫ –ø–æ –∏–º–µ–Ω–∏ Max —è–≤–ª—è–µ—Ç—å—Å—è —Å—Ç–∞—Ä—à–∏–º –≤ —Å–µ–º—å–µ!
*/
//_/_/_/

// // // —Ñ –ø—Ä–∏–Ω–∏–º–∞—é—â–∞—è –ª—é–±—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —á–µ—Ä–µ–∑ ...arguments
// function sumFn() {
//   return [...arguments].reduce((acc, val) => acc + val)
// }
// console.log(sumFn(16, 34, 5, 13, -6, 24, 6, 51, 555))

//_/_/_/

// // [...arguments] –£ –ª—é–±–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π arguments, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: arguments ‚Äì –æ–±—ä–µ–∫—Ç, –ø–æ—Ö–æ–∂–∏–π –Ω–∞ –º–∞—Å—Å–∏–≤. –û–Ω –∏—Ç–µ—Ä–∏—Ä—É–µ–º, –∏–º–µ–µ—Ç —á–∏—Å–ª–æ–≤—ã–µ –∏–Ω–¥–µ–∫—Å—ã, –Ω–æ, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å .forEach(). –ß—Ç–æ–±—ã –æ–±–µ—Ä–Ω—É—Ç—å –µ–≥–æ –≤ –º–∞—Å—Å–∏–≤, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä ...
// function sortFn() {
//   const x = [...arguments].sort((a, b) => a - b)
//   console.log(`sort -> ${x}`)
//   return x
// }
// sortFn(16, 3, 5, 8, 13, 6, -12, 38, 55, 46, 789, 12, 4545, 12, 884, -5, -1, -1)

//_/_/_/

// // –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏—Å–≤–æ–µ–Ω–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
// let plusFive = number => {
//   return number + 5
// }
// let f = plusFive
// plusFive(3) // 8
// // –ø–æ—Å–∫–æ–ª—å–∫—É f –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –µ–µ –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å.
// f(9) // 14

//_/_/_/

// // –§—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ - callback function
// // —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —á–µ—Ç–Ω–æ—Å—Ç—å
// const isEven = n => {
//   return n % 2 == 0
// }
// // —Å–æ–∑–¥–∞–µ–º —Ñ-–∏—é –ø—Ä–∏–Ω–∏–º–∞—é—â—É—é –¥—Ä—É–≥—É—é —Ñ-–∏—é –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –≤—Ç–æ—Ä–æ–π —Ñ-–∏–∏
// let printMsg = (evenFunc, n) => {
//   const isNumEven = evenFunc(n) // –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É true/false
//   console.log(`The number ${n} is an even number: ${isNumEven}.`)
// }
// //–ü–µ—Ä–µ–¥–∞–µ–º isEven –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
// printMsg(isEven, 4) // The number 4 is an even number: True.

//_/_/_/

// // —Å–æ–∑–¥–µ–º —Å–Ω–∞—á–∞–ª–æ –ø—Ä–æ—Å—Ç–æ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—á–∞—Ç–∞–µ—Ç —Å—Ç—Ä–æ–∫—É
// const delayedHello = () => {
//   console.log('Hi! This is an asynchronous greeting!')
// }
// // –≤—ã–∑—ã–≤–∞–µ–º setTimeout() —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞. –ü–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ, —á–µ—Ä–µ–∑ –¥–≤–µ —Å–µ–∫—É–Ω–¥—ã delayedHello() –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω
// setTimeout(delayedHello, 2000)

//_/_/_/

// // –∑–∞–º—ã–∫–∞–Ω–∏–µ
// const add = x => y => {
//   const z = x + y
//   console.log(x + ' + ' + y + ' = ' + z)
//   return add(z)
// }
// add(1)(4)(6)(9)(3)
// // 1 + 4 = 5
// // 5 + 6 = 11
// // 11 + 9 = 20
// // 20 + 3 = 23

//_/_/_/_/_/_/_/_/_/_/_/   OBJECT = {}  _/_/_/_/_/_/_/_/_/_/_/_/

// javascript –ø–µ—Ä–µ–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç—ã –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤. –ú—É—Ç–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤
//  –æ–±—ä–µ–∫—Ç—ã –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –ø–æ —Å—Å—ã–ª–∫–µ –∞ –Ω–µ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é. –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Å–∞–º –æ–±—ä–µ–∫—Ç (–∞ –Ω–µ –µ–≥–æ –∫–æ–ø–∏—è) –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –∏–∑–º–µ–Ω–µ–Ω (–º–æ–∂–µ—Ç –±—ã—Ç—å –∏–∑–º–µ–Ω–µ–Ω) –≤–Ω—É—Ç—Ä–∏ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏!

//_/_/_/

// // –°—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –∏–º–µ—é—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ this –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, –Ω–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç this –æ–∫—Ä—É–∂–∞—é—â–∏–π –ª–µ–∫—Å–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –æ–Ω–∏ –æ–±—ã—á–Ω–æ –Ω–µ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤ –æ–±—ä–µ–∫—Ç–∞.
// const myObj = {
//   data: 'abc',
//   loggerA: () => {
//     console.log(this.data) // data –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
//   },
//   loggerB() {
//     console.log(this.data) // this –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –æ—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–º—É –æ–±—ä–µ–∫—Ç—É
//   },
// }
// myObj.loggerA() // undefined
// myObj.loggerB() // 'abc'

//_/_/_/

// // –°–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É—é—â–µ–≥–æ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞. –î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
// const rubiksCubeFacts = {
//   possiblePermutations: '43,252,003,274,489,856,000',
//   invented: '1974',
//   largestCube: '17x17x17',
// }
// const { possiblePermutations, invented, largestCube } = rubiksCubeFacts
// console.log(possiblePermutations) // '43,252,003,274,489,856,000'
// console.log(invented) // '1974'
// console.log(largestCube) // '17x17x17'

// // —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∏–º–µ–Ω–∏ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞
// const activity = 'Surfing'
// const beach = { activity }
// console.log(beach) // { activity: 'Surfing' }

//_/_/_/

// // delete –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ —É–¥–∞–ª—è–µ—Ç –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∏ —Å–≤–æ–π—Å—Ç–≤–∞ —Å–∞–º–æ–≥–æ –æ—Ç –æ–±—ä–µ–∫—Ç–∞. delete –û–ø–µ—Ä–∞—Ç–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø–æ —Å–≤–æ–π—Å—Ç–≤–∞–º, –∞ –Ω–µ –æ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–ª–∏ —Ñ—É–Ω–∫—Ü–∏–π.
// delete student.score
// delete person.hobby

//_/_/_/

// let obj = {
//   name: 'Bob',
//   married: true,
//   "mother's name": 'Alice',
//   'year of birth': 1987,
//   getAge: function () {
//     return 2012 - obj['year of birth']
//   },
//   1: 'one',
// }

// obj['name'];  // 'Bob'
// obj.name;     // 'Bob'
// obj.getAge(); // 24

//_/_/_/

// // this –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ. –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –≤—ã–∑—ã–≤–∞—é—â–µ–º—É  –º–µ—Ç–æ–¥–∞ –æ–±—ä–µ–∫—Ç—É –∏ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–∏–º —ç—Ç–æ–º—É –æ–±—ä–µ–∫—Ç—É.
// const cat = {
//   name: 'Pipey',
//   age: 8,
//   whatName() {
//     return this.name
//   },
// }
// console.log(cat.whatName()) // Pipey

//_/_/_/_/_/_/_/_/_/_/_/   CLASS {constructor}  _/_/_/_/_/_/_/_/_/_/_/_/

/* //_/_/_/
// –ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –≤ –∫–ª–∞—Å—Å-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–µ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:
class Animals {
  constructor(name, age) {
    this.name = name
    this.age = age
  }
  sing() {
    return `${this.name} can sing`
  }
  dance() {
    return `${this.name} can dance`
  }
}

class Cats extends Animals {
  constructor(name, age, whiskerColor) {
    super(name, age)
    this.whiskerColor = whiskerColor
  }
  whiskers() {
    return `I have ${this.whiskerColor} whiskers`
  }
}

let clara = new Cats('Clara', 33, 'indigo')
// –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Cats clara –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞ –∏ –º–µ—Ç–æ–¥—ã –∫–∞–∫ –∫–ª–∞—Å—Å–∞ Cats, —Ç–∞–∫ –∏ –∫–ª–∞—Å—Å–∞ Animals.
console.log(clara.sing()) // "Clara can sing"
console.log(clara.whiskers()) // "I have indigo whiskers"

// –ü–µ—Ä–µ–ø–∏—à–µ–º —ç—Ç–æ—Ç –∫–æ–¥ –≤ –ø—Ä–æ—Ç–æ—Ç–∏–ø–Ω–æ–º —Å—Ç–∏–ª–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ Object.create()
function Animals(name, age) {
  let newAnimal = Object.create(animalConstructor)
  newAnimal.name = name
  newAnimal.age = age
  return newAnimal
}

let animalConstructor = {
  sing: function () {
    return `${this.name} can sing`
  },
  dance: function () {
    return `${this.name} can dance`
  },
}

function Cats(name, age, whiskerColor) {
  let newCat = Animals(name, age)
  Object.setPrototypeOf(newCat, catConstructor)
  newCat.whiskerColor = whiskerColor
  return newCat
}

let catConstructor = {
  whiskers() {
    return `I have ${this.whiskerColor} whiskers`
  },
}

Object.setPrototypeOf(catConstructor, animalConstructor)
const clara = Cats('Clara', 33, 'purple')
clara.sing() // "Clara can sing"
clara.whiskers() // "I have purple whiskers"
//_/_/_/ */

// class Square {
//   constructor(size) {
//     this.size = size
//   }
//   set size(value) {
//     // —Å–µ—Ç—Ç–µ—Ä, —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –∑–∞–ø–∏—Å–∏
//     this._size = value // –ü—Ä–∏–≤–∞—Ç–Ω–æ–µ –ø–æ–ª–µ
//   }
//   get area() {
//     // –≥–µ—Ç—Ç–µ—Ä, —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏
//     return this._size ** 2
//   }
// }
// const box = new Square(3)
// console.log(box.area) // 9
// box.size = 5 // –Ω–µ–ª—å–∑—è –∑–∞–¥–∞–≤–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é
// console.log(box.size) // undefined

//_/_/_/

// // classes/static-methods
// // –í –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–º –≤—ã—à–µ –ø—Ä–∏–º–µ—Ä–µ –º—ã —Å–æ–∑–¥–∞–µ–º static –º–µ—Ç–æ–¥ —Å –∏–º–µ–Ω–µ–º,.generateName()–∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∏–º—è. –ò–∑-–∑–∞ static –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ –º—ã –º–æ–∂–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø, .generateName()—Ç–æ–ª—å–∫–æ –¥–æ–±–∞–≤–∏–≤ –µ–≥–æ –∫ Animal –∫–ª–∞—Å—Å—É:
// class Animal {
//   constructor(name) {
//     this._name = name
//     this._behavior = 0
//   }
//   static generateName() {
//     const names = ['Angel', 'Spike', 'Buffy', 'Willow', 'Tara']
//     const randomNumber = Math.floor(Math.random() * 5)
//     return names[randomNumber]
//   }
// }
// // –ú—ã –≤—ã–∑—ã–≤–∞–µ–º .generateName() –º–µ—Ç–æ–¥ —Å–æ —Å–ª–µ–¥—É—é—â–∏–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º:
// console.log(Animal.generateName())
// // —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ –Ω–µ –º–æ–∂–µ—Ç –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å—Ç–∞—Ç–∏–∫ –º–µ—Ç–æ–¥—É –∫–ª–∞—Å—Å–∞
// // Uncaught TypeError: tyson.generateName is not a function
// const tyson = new Animal('Tyson')
// tyson.generateName() // Uncaught TypeError

//_/_/_/_/_/_/_/_/_/_/_/   JS + <HTML/>   _/_/_/_/_/_/_/_/_/_/_/_/

// // out in html - –≤ JS document.write —Å —Ç–µ–≥–∞–º–∏ h1
// document.write('<h1>–≤ JS document.write —Å —Ç–µ–≥–∞–º–∏ h1</h1>')

//_/_/_/

// —Å—á–µ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
// document.querySelector('.button').onclick = () => console.log('–Ω–∞–∂–∞–ª')

/* //_/_/_/
// // –°–ø–æ—Å–æ–± –ø—Ä–æ–≤–µ—Ä–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤ W3C DOM –ø–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–¥, –∑–∞–≤–∏—Å—è—â–∏–π –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —ç—Ç–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏.
// if (document.getElementById && document.getElementsByTagName) {
//   // –µ—Å–ª–∏ –º–µ—Ç–æ–¥—ã getElementById –∏ getElementsByTagName
//   // –¥–æ—Å—Ç—É–ø–Ω—ã, —Ç–æ –º–æ–∂–Ω–æ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ç–æ—á–Ω–æ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É W3CDOM.


//   obj = document.getElementById('navigation')
//   // –¥–∞–ª–µ–µ –∏–¥—ë—Ç –¥—Ä—É–≥–æ–π –∫–æ–¥ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π W3CDOM.
//   // ‚Ä¶.
// }
// // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–ª–µ–Ω–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π DOM –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –≤–µ–±-–±—Ä–∞—É–∑–µ—Ä–µ.
// function domImplementationTest() {
//   var featureArray = [
//     'HTML',
//     'XML',
//     'Core',
//     'Views',
//     'StyleSheets',
//     'CSS',
//     'CSS2',
//     'Events',
//     'UIEvents',
//     'MouseEvents',
//     'HTMLEvents',
//     'MutationEvents',
//     'Range',
//     'Traversal',
//   ]
//   var versionArray = ['1.0', '2.0', '3.0']
//   var i
//   var j
//   if (document.implementation && document.implementation.hasFeature) {
//     for (i = 0; i < featureArray.length; i++) {
//       for (j = 0; j < versionArray.length; j++) {
//         document.write(
//           '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è ' +
//             featureArray[i] +
//             ' –≤–µ—Ä—Å–∏–∏ ' +
//             versionArray[j] +
//             ': ' +
//             (document.implementation.hasFeature(featureArray[i], versionArray[j])
//               ? '<span style="color:green">true</span>'
//               : '<span style="color:red">false</span>') +
//             '<br/>'
//         )
//       }
//       document.write('<br/>')
//     }
//   }
// }
//_/_/_/ */

// function addButtons(numButtons) {
//   for (var i = 0; i < numButtons; i++) {
//     var button = document.createElement('input')
//     button.type = 'button'
//     button.value = 'Button ' + (i + 1)
//     // –ò—Å–ø–æ–ª—å–∑—É–µ–º —à–∞–±–ª–æ–Ω Immediately-Invoked Function Expression (IIFE) –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∂–µ–ª–∞–µ–º–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è:
//     button.onclick = (buttonIndex => {
//       return () => alert('Button ' + (buttonIndex + 1) + ' clicked') // c return () => –∞–ª–µ—Ä—Ç –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç—å—Å—è —Å—Ä–∞–∑—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
//     })(i) // –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º i
//     document.body.appendChild(button)
//     document.body.appendChild(document.createElement('br'))
//   }
// }
// window.onload = () => addButtons(5)

//_/_/_/_/_/_/_/_/_/_/_/   PROMISE (res, rej)   _/_/_/_/_/_/_/_/_/_/_/_/

// async...await
// ES8 —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è, async...await.
// –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥ , –∫–æ—Ç–æ—Ä—ã–π —á–∏—Ç–∞–µ—Ç—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ (–≤ —Ñ–∞–π–ª–µ async-await.js)
// –í –∫–∞—á–µ—Å—Ç–≤–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã .then()—Ñ—É–Ω–∫—Ü–∏—è–º —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –æ–Ω –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ª—É—á—à—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É –∫–æ–¥–∞ –∏ –±–ª–∏–∑–∫–æ–µ —Å—Ö–æ–¥—Å—Ç–≤–æ —Å —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º –∫–æ–¥–æ–º.

// let myPromise = () => {
//   return new Promise((resolve, reject) => {
//     setTimeout(() => {
//       resolve('Yay, I resolved!')
//     }, 1000)
//   })
// }

// async function noAwait() {
// 	let value = myPromise();
// 	console.log(value);
//  }

//  async function yesAwait() {
// 	let value = await myPromise();
// 	console.log(value);
//  }

//  noAwait(); // Prints: Promise { <pending> }
// yesAwait(); // Prints: Yay, I resolved!

//_/_/_/

// // –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±–µ—â–∞–Ω–∏–µ —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º, —Ä–∞–≤–Ω—ã–º –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.
// function nativePromise() {
//   return new Promise((resolve, reject) => {
//     resolve('yay!')
//   })
// }
// // –ú–æ–∂–Ω–æ –±—ã–ª–æ –Ω–∞–ø–∏—Å–∞—Ç—å:
// async function asyncPromise() {
//   return 'yay!'
// }
// // —Å–æ–∫—Ä–∞—â–µ–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å:
// let withAsync = async num => (num === 0 ? 'zero' : 'not zero')
//
// // –µ—â–µ –ø—Ä–∏–º–µ—Ä:
// // Native promise version:
// function nativePromiseDinner() {
//   brainstormDinner().then(meal => {
//     console.log(`I'm going to make ${meal} for dinner.`)
//   })
// }
// // async/await version:
// async function announceDinner() {
//   let meal = await brainstormDinner()
//   console.log(`I'm going to make ${meal} for dinner.`)
// }

//_/_/_/

// /* async —Ñ—É–Ω–∫—Ü–∏–∏ –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –æ–±–µ—â–∞–Ω–∏–µ. –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –º—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –æ–±–µ—â–∞–Ω–∏–π, –∫–∞–∫ .then() –∏ .catch —Å –Ω–∞—à–∏–º–∏ async —Ñ—É–Ω–∫—Ü–∏—è–º–∏. async –§—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –≤ –æ–¥–Ω–æ–º –∏–∑ —Ç—Ä–µ—Ö —Å–ø–æ—Å–æ–±–æ–≤:
// –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–µ—Ä–Ω—É–ª–∞, –æ–Ω–∞ –≤–µ—Ä–Ω–µ—Ç –æ–±–µ—â–∞–Ω–∏–µ —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º undefined.
// –ï—Å–ª–∏ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ, –Ω–µ —è–≤–ª—è—é—â–µ–µ—Å—è –æ–±–µ—â–∞–Ω–∏–µ–º, –æ–Ω–∞ –≤–µ—Ä–Ω–µ—Ç –æ–±–µ—â–∞–Ω–∏–µ, —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–µ –∫ —ç—Ç–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é.
// –ï—Å–ª–∏ –æ–±–µ—â–∞–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏, –æ–Ω–∞ –ø—Ä–æ—Å—Ç–æ –≤–µ—Ä–Ω–µ—Ç —ç—Ç–æ –æ–±–µ—â–∞–Ω–∏–µ. */
// async function fivePromise() {
//   return 5
// }
// fivePromise().then(resolvedValue => {
//   console.log(resolvedValue)
// }) // Prints 5
// // –í –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–º –≤—ã—à–µ –ø—Ä–∏–º–µ—Ä–µ, –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Ç–æ, —á—Ç–æ –º—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è 5 –≤–Ω—É—Ç—Ä–∏ —Ç–µ–ª–∞ —Ñ—É–Ω–∫—Ü–∏–∏, –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è fivePromise() –æ–±–µ—â–∞–Ω–∏–µ —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º 5

//_/_/_/

// // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è  –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω–∞ —Å async –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º –ø–µ—Ä–µ–¥ function –∏–º–µ–Ω–µ–º –∏–ª–∏ –ø–µ—Ä–µ–¥ "()" –∫–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è —Å—Ç—Ä–µ–ª–∫–∏ async.async –§—É–Ω–∫—Ü–∏—è –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±–µ—â–∞–Ω–∏–µ.
// function helloWorld() {
//   return new Promise(resolve => {
//     setTimeout(() => {
//       resolve('Hello World!')
//     }, 2000)
//   })
// }
// const msg = async function () {
//   //Async Function Expression
//   const msg = await helloWorld()
//   console.log('Message:', msg)
// }
// const msg1 = async () => {
//   //Async Arrow Function
//   const msg = await helloWorld()
//   console.log('Message:', msg)
// }
// msg() // Message: Hello World! <-- after 2 seconds
// msg1() // Message: Hello World! <-- after 2 seconds

// // async –§—É–Ω–∫—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç try...catch –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫. –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–≤–º–µ—Å—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞.
// let json = '{ "age": 30 }' // incomplete data
// try {
//   let user = JSON.parse(json) // <-- no errors
//   console.log(user.name) // no name!
// } catch (e) {
//   console.log('Invalid JSON data!')
// }

//_/_/_/

// // –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ Javascript Promise
// const executorFn = (resolve, reject) => {
//   console.log('The executor function of the promise!')
// }
// // –≠–∫–∑–µ–º–ø–ª—è—Ä Promise  —Å–æ–∑–¥–∞–µ—Ç—Å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º new –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞. –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Promise –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è-–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å, –æ—Ç–≤–µ—á—é—â–∞—è –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ–±–µ—â–∞–Ω–∏—è.
// const promise = new Promise(executorFn)

// // –°–æ—Å—Ç–æ—è–Ω–∏—è –æ–±–µ—â–∞–Ω–∏—è JavaScript
// const promise = new Promise((resolve, reject) => {
//   const res = true
//   // An asynchronous operation.
//   if (res) {
//     resolve('Resolved!')
//   } else {
//     reject(Error('Error'))
//   }
// })
// promise.then(
//   res => console.log(res),
//   err => alert(err)
// )
// // Resolved!

// // .catch()–°–ø–æ—Å–æ–± –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–∫–∞–∑–∞
// const promise = new Promise((resolve, reject) => {
//   setTimeout(() => {
//     reject(Error('Promise Rejected Unconditionally.'))
//   }, 1000)
// })
// promise.then(res => {
//   console.log(value)
// })
// promise.catch(err => {
//   alert(err)
// })
// // Error: Promise Rejected Unconditionally.

// /* –ú–µ—Ç–æ–¥ Promise.all() –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –æ–±–µ—â–∞–Ω–∏–π. –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤ –æ–±–µ—â–∞–Ω–∏–π. –ï—Å–ª–∏ –≤—Å–µ –æ–±–µ—â–∞–Ω–∏—è –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã, –æ–±–µ—â–∞–Ω–∏–µ, –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω–æ–µ –∏–∑, Promise.all() –±—É–¥–µ—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–æ –≤ –º–∞—Å—Å–∏–≤, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤—Å–µ—Ö –æ–±–µ—â–∞–Ω–∏–π –≤ –ø–æ—Ä—è–¥–∫–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞. –õ—é–±–æ–π –æ—Ç–∫–∞–∑ –æ—Ç —Å–ø–∏—Å–∫–∞ –æ–±–µ—â–∞–Ω–∏–π –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—é –±–æ–ª—å—à–µ–≥–æ –æ–±–µ—â–∞–Ω–∏—è. */
// const promise1 = new Promise((resolve, reject) => {
//   setTimeout(() => {
//     resolve(3)
//   }, 300)
// })
// const promise2 = new Promise((resolve, reject) => {
//   setTimeout(() => {
//     resolve(2)
//   }, 200)
// })
// Promise.all([promise1, promise2]).then(res => {
//   console.log(res[0])
//   console.log(res[1])
// })
// // 3 2

// // –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–µ—Ç–æ–¥–æ–≤ .then () –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±–µ—â–∞–Ω–∏–µ, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–¥–∏–Ω –∏–ª–∏ –æ–±–∞ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. –ò–∑-–∑–∞ —ç—Ç–æ–≥–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ .then() –º–µ—Ç–æ–¥–æ–≤ –º–æ–∂–Ω–æ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –≤ —Ü–µ–ø–æ—á–∫—É. –≠—Ç–æ –∏–∑–≤–µ—Å—Ç–Ω–æ –∫–∞–∫ –∫–æ–º–ø–æ–∑–∏—Ü–∏—è.
// const promise = new Promise(resolve => setTimeout(() => resolve('dAlan'), 100))
// promise
//   .then(res => {
//     return res === 'Alan' ? Promise.resolve('Hey Alan!') : Promise.reject('Who are you?')
//   })
//   .then(
//     res => {
//       console.log(res)
//     },
//     err => {
//       console.log(err)
//     }
//   )
// // Who are you?

//_/_/_/

// //  promises 2020
// // —Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥ for of await. –ñ–¥–µ—Ç –∫–æ–≥–¥–∞ –≤—Å–µ –ø—Ä–æ–º–∏—Å—ã –∑–∞—Ä–µ–∑–æ–ª–≤—è—Ç—å—Å—è –∏ –≤—ã–≤–æ–¥ –∏—Ö —Ä–∞–∑–æ–º.
// const emulate = (id, ms) =>
//   new Promise(resolve => {
//     setTimeout(() => resolve(id), ms)
//   })
// const promises = [emulate(1, 250), emulate(2, 500), emulate(3, 1500)]
// async function old() {
//   for (const promise of await Promise.all(promises)) {
//     console.log('old:', promise)
//   }
// }
// // –Ω–æ–≤—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å for await. –ú—ã –Ω–µ –∂–¥–µ–º –∫–æ–≥–¥–∞ –≤—Å–µ –ø—Ä–æ–º–∏—Å—ã –∑–∞—Ä–µ–∑–æ–ª–≤—è—Ç—å—Å—è –∞ –≤—ã–≤–æ–¥–∏–º –∏—Ö –ø–æ –º–µ—Ä–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏. –ü—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ for of –≤—ã–≤–æ–¥–∏—Ç —Å—Ç–∞—Ç—É—Å pending –≤—Å–µ—Ö –ø—Ä–æ–º–∏—Å–æ–≤.
// async function modern() {
//   for await (const promise of promises) {
//     console.log('moderm:', promise)
//   }
// }
// modern()
// // old()

//_/_/_/

// const inventory = {
//   sunglasses: 1900,
//   pants: 1088,
//   bags: 1344,
// }
// // —Å–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å —É—Å–ª–æ–≤–∏—è–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—ä–µ–∫—Ç–∞, –¥–ª—è resolve, reject.
// function myExecutor(resolve, reject) {
//   if (inventory.sunglasses > 0) {
//     resolve('Sunglasses order processed.')
//   } else {
//     reject('That item is sold out.')
//   }
// }
// //—Å–æ–∑–¥–∞–µ–º —Ñ-–∏—é –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é –Ω–æ–≤—ã–π –ø—Ä–æ–º–∏—Å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º (—Ñ-–∏—è —Å res, rej)
// function orderSunglasses() {
//   return new Promise(myExecutor)
// }
// console.log(orderSunglasses()) // Promise { 'Sunglasses order processed.' }

//_/_/_/

// // setTimeout()–¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–±–µ—â–∞–Ω–∏–π:
// const returnPromiseFunction = () => {
//   return new Promise((resolve, reject) => {
//     setTimeout(() => {
//       resolve('I resolved!')
//     }, 1000)
//   })
// }
// const prom = returnPromiseFunction()
// console.log(prom) // Promise { <pending> }

//_/_/_/_/_/_/_/_/_/_/_/   __PROTO__ | .PROTOTYPE   _/_/_/_/_/_/_/_/_/_/_/_/

// let shogun = new Samurai('segun')
// console.log(shogun.__proto__ !== Function.prototype)
// console.log(shogun.__proto__ === Samurai.prototype)
// console.log(shogun.__proto__.__proto__ === Samurai.prototype.__proto__)
// console.log(shogun.__proto__.constructor.__proto__ === Samurai.prototype.constructor.__proto__)
// console.log(shogun)
// console.log(shogun.__proto__)
// console.log(shogun.__proto__.constructor)
//
// console.log(shogun.__proto__.__proto__.__proto__)
// console.log(shogun.__proto__.__proto__)
// console.log(shogun.__proto__)
// console.log(shogun)
//
// console.log(Samurai.prototype !== Object.prototype)
// console.log(Samurai.prototype !== Function.prototype)

//_/_/_/_/_/_/_/_/_/_/_/   OBJECT   _/_/_/_/_/_/_/_/_/_/_/_/

/* //_/_/_/
// –û–±—ä–µ–∫—Ç—ã 2020

// Object.getOwnPropertyDescriptor
const person = {
  name: 'Max',
  age: 30,
}
console.log(Object.getOwnPropertyDescriptor(person, 'name')) // { value: 'Max', writable: true, enumerable: true, configurable: true }
console.log(Object.getOwnPropertyDescriptors(person)) // –æ–ø–∏—Å–∞–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤ –≤—Å–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞

// Object.entries –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ –º–∞—Å—Å–∏–≤–æ–≤, –≥–¥–µ –∫–∞–∂–¥—ã–π –º–∞—Å—Å–∏–≤ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 2—Ö —ç–ª–ª–µ–º–µ–Ω—Ç–æ–≤, –≥–¥–µ 0 –∏–Ω–¥–µ–∫—Å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª—é—á–∞ –∞ 1 –∏–Ω–¥–µ–∫—Å –∑–Ω–∞—á–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –∫–ª—é—á–∞.
console.log(Object.entries(person)) // [ [ 'name', 'Max' ], [ 'age', 30 ] ]

// –æ–±—Ä–∞—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ, –ø–µ—Ä–µ–¥–∞–µ–º –≤–ª–æ–∂–µ–Ω—ã–π –º–∞—Å—Å–∏–≤ entries:
// [ [ 'name', 'Max' ], [ 'age', 30 ] ],
console.log(
  Object.fromEntries([
    ['name', 'Max'],
    ['age', 30],
  ])
)
// –Ω–∞ –≤—ã—Ö–æ–¥–µ –ø–æ–ª—É—á–∞–µ–º –Ω–∞—à –æ–±—ä–µ–∫—Ç person
// out: { name: 'Max', age: 30 }

// –ø–µ—Ä–µ–≤–æ–¥ –≤ entries –∏ –æ–±—Ä–∞—Ç–Ω–æ –≤ –æ–±—ä–µ–∫—Ç person
console.log(Object.fromEntries(Object.entries(person)))

console.log(Object.entries(['M', 'A', 'X']))
// out: [ [ '0', 'M' ], [ '1', 'A' ], [ '2', 'X' ] ]

// –¥–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä–∏–∑–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –Ω–∞ key –∏ value
for (const [key, value] of Object.entries(person)) {
  console.log(key, value)
}
//out:
// name Max
// age 30

// –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç JavaScript Object Notation (JSON)
for (const [key, value] of Object.entries(person)) {
  console.log(`${JSON.stringify(key)}: ${JSON.stringify(value)}`)
}
//out:
// "name": "Max"
// "age": 30

// –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ—Å—Ç–∞–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –æ–±—ä–µ–∫—Ç–∞
console.log(Object.values(person)) // out: [ 'Max', 30 ]

// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∫–ª—é—á–µ–π –∏–∑ –æ–±—ä–µ–∫—Ç–∞
console.log(Object.keys(person)) // [ 'name', 'age' ]
//_/_/_/ */
