'use strict'

//_/_/_/_/_/_/_/_/_/_/_/   NOTE   _/_/_/_/_/_/_/_/_/_/_/_/

// js doc —Å–æ–∑–¥–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞
/** */

//_/_/_/_/_/_/_/_/_/_/_/   IF ELSE | SWITCH   _/_/_/_/_/_/_/_/_/_/_/_/

// // —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π if else
// let defaultName
// if (username) {
//   defaultName = username
// } else {
//   defaultName = 'Stranger'
// }
// // –≤–∞—Ä–∏–∞–Ω—Ç —Å –ò–õ–ò
// let defaultName = username || 'Stranger'

//_/_/_/

// // switch
// const food = 'salad'
// switch (food) {
//   case 'oyster':
//     console.log('The taste of the sea ü¶™')
//     break
//   case 'pizza':
//     console.log('A delicious pie üçï')
//     break
//   default:
//     console.log('Enjoy your meal')
// } // Prints: Enjoy your meal

//_/_/_/_/_/_/_/_/_/_/_/   LOOPS i++  _/_/_/_/_/_/_/_/_/_/_/_/

// // —Ç–∞–±–ª–∏—Ü–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è
// // —Ñ –ø–µ—á–∞—Ç–∞–µ—Ç —Ü–∏—Ñ—Ä—ã –∏ —Ç–∞–±–∞–º–∏ –≤ —Å—Ç—Ä–æ–∫—É
// function printLine(n) {
//   let text = ''
//   for (let i = 1; i <= 7; i++) {
//     text += i * n + '\t'
//   }
//   console.log(text)
// }
// // —Ü–∏–∫–ª –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ñ –∏ –≤—ã–≤–æ–¥–∏—Ç —Å—Ç—Ä–æ–∫–∏ –∏ —Å—Ç–æ–ª–±—Ü—ã
// for (let i = 1; i <= 5; i++) {
//   console.log('-'.repeat(50))
//   printLine(i)
// }

//_/_/_/

// // —Ü–∏–∫–ª for loop
// for (let counterOne = 1; counterOne < 4; counterOne++) {
//   console.log(counterOne) // 1 2 3
// }

//_/_/_/

// // –≤–ª–æ–∂–µ–Ω—ã–π —Ü–∏–∫–ª for nest loop
// for (let outer = 0; outer < 2; outer += 1) {
//   for (let inner = 0; inner <= 5; inner += 1) {
//     console.log(`${outer}-${inner}`)
//   }
// }

//_/_/_/

// // —Ü–∏–∫–ª while loop
// let counterTwo = 1
// while (counterTwo < 4) {
//   console.log(counterTwo) // 1 2 3
//   counterTwo++
// }

//_/_/_/

// // —Ü–∏–∫–ª for in —Å –û–±—ä–µ–∫—Ç–∞–º–∏ –º–æ–∂–µ—Ç –±—Ä–∞—Ç—å –∫–ª—é—á –∏ –∑–Ω–∞—á–µ–Ω–∏–µ
// let mobile = { brand: 'Samsung', model: 'Galaxy Note 9' }
// for (let key in mobile) {
//   console.log(`${key}: ${mobile[key]}`)
// }
// // brand: Samsung
// // model: Galaxy Note 9

//_/_/_/

// // —Ü–∏–∫–ª for in —Å –ú–∞—Å—Å–∏–≤–∞–º–∏ –≤—ã–≤–æ–¥–∏—Ç –∏–Ω–¥–µ–∫—Å—ã
// // —Ü–∏–∫–ª for of –≤—ã–≤–æ–¥–∏—Ç –∏–º–µ–Ω–∞
// const fruits = ['apple', 'banana', 'orange']
// for (const fru in fruits) {
//   console.log(fru) // for in: 0 1 2
//   console.log(fru) // for of: apple	banana orange
// }

//_/_/_/_/_/_/_/_/_/_/_/   ARRAY []   _/_/_/_/_/_/_/_/_/_/_/_/

/*
–í—Å–µ –º–µ—Ç–æ–¥—ã –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–∏–Ω–∏–º–∞—é—Ç —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞, –∏–ª–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∏–ª–∏ —Ñ—É–Ω–∫—Ü–∏—é —Å—Ç—Ä–µ–ª–∫–∏. 

.forEach () –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ –∫–æ–¥–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ, –Ω–æ –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç –º–∞—Å—Å–∏–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç undefined.

.map () –≤—ã–ø–æ–ª–Ω—è–µ—Ç –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –∫–æ–¥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏.

.reduce () –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∏—Ç–µ—Ä–∞—Ü–∏—é –ø–æ –º–∞—Å—Å–∏–≤—É, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ.

.filter () –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –æ–Ω –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º, –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –∏—Å—Ç–∏–Ω–Ω–æ—Å—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤.

.findIndex () –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞, –∫–æ—Ç–æ—Ä—ã–π —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏—é –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞. –û–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç -1, –µ—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ –Ω–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏—é.
*/

//_/_/_/

/*
!–º–µ—Ç–æ–¥—ã sort, reverse –∏ splice –∏–∑–º–µ–Ω—è—é—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤!

.splice() –û—Ç—Å—á–∏—Ç—ã–≤–∞–µ–º–æ–µ –æ—Ç –Ω—É–ª—è –º–µ—Å—Ç–æ –≤ –º–∞—Å—Å–∏–≤–µ, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–ª–µ–¥—É–µ—Ç –Ω–∞—á–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –£–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –º–∞—Å—Å–∏–≤–∞ –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–∞ –∏—Ö –º–µ—Å—Ç–æ –Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –≤–æ–∑–≤—Ä–∞—â–∞—è —É–¥–∞–ª–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã. 
// !–º–µ—Ç–æ–¥—ã sort, reverse –∏ splice –∏–∑–º–µ–Ω—è—é—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤!

*/

//_/_/_/

/* 
Array.prototype.reduce()
–°—É–º–º–∞ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞.
–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ —á–∏—Å–ª–∞ –≤ —Å—Ç—Ä–æ–∫–∏.
–°–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞, –∏–∑ –¥–≤—É–º–µ—Ä–Ω–æ–≥–æ –≤ –æ–¥–Ω–æ–º–µ—Ä–Ω—ã–π.
–ù–∞–π—Ç–∏ –Ω–∞–∏–±–æ–ª—å—à–µ–µ —á–∏—Å–ª–æ –≤ –º–∞—Å—Å–∏–≤–µ.
–ò–∑–≤–ª–µ—á—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –º–∞—Å—Å–∏–≤–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä id –æ–±—ä–µ–∫—Ç–∞.
 */

//_/_/_/

/* 
Array.prototype.forEach()
—Ü–∏–∫–ª for in —Å –º–∞—Å—Å–∏–≤–∞–º–∏ –≤—ã–≤–æ–¥–∏—Ç –∏–Ω–¥–µ–∫—Å—ã
—Ü–∏–∫–ª for of —Å –º–∞—Å—Å–∏–≤–∞–º–∏ –≤—ã–≤–æ–¥–∏—Ç –∏–º–µ–Ω–∞
—É –º–∞—Å—Å–∏–≤–æ–≤ –µ—Å—Ç—å forEach() –∑–∞–º–µ–Ω—è–µ—Ç —Ä–∞–±–æ—Ç—É —Å —Ü–∏–∫–ª–æ–º + –±–æ–ª–µ–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–Ω
 */

//_/_/_/

// // —Å—Ä–∞–≤–Ω–∏—Ç—å –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ –∏ —É–∑–Ω–∞—Ç—å –æ–±—â–µ–µ —á–∏—Å–ª–æ —á–µ—Ä–µ–∑ –≤–ª–æ–∂–µ–Ω—ã–π —Ü–∏–∫–ª
// const myArray = [6, 19, 20]
// const yourArray = [19, 81, 2]
// for (let i = 0; i < myArray.length; i++) {
//   for (let j = 0; j < yourArray.length; j++) {
//     if (myArray[i] === yourArray[j]) {
//       console.log('–û–±—â–µ–µ —á–∏—Å–ª–æ: ' + yourArray[j])
//     }
//   }
// }

//_/_/_/

// // —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å –Ω–æ–º–µ—Ä–∞ –∏–Ω–¥–µ–∫—Å–∞ –≤–∫–ª, –¥–æ –∫–æ–Ω—Ü–∞.
// let arr = [22, 33, 44, 55, 66, 77, 88, 99]
// let sl = arr.slice(3)
// console.log(arr) // arr –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è
// console.log(sl) // [ 55, 66, 77, 88, 99 ]

//_/_/_/_/_/_/_/_/_/_/_/   STRING '' "" ``  _/_/_/_/_/_/_/_/_/_/_/_/

/* //_/_/_/
// –°–¢–†–û–ö–ò 2020
// –º–µ—Ç–æ–¥ trim. trimStart, trimEnd —É–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–±–µ–ª—ã –≤ —Å—Ç—Ä–æ–∫–∞—Ö
const start = '                   Hello '
const end = 'This is new JS     '
// –≤–∞—Ä–∏–∞–Ω—Ç 1
console.log(start.trimStart() + end.trimEnd()) // Hello This is new JS
// –≤–∞—Ä–∏–∞–Ω—Ç 2
console.log((start + end).trim()) // Hello This is new JS

// padStart(5) –¥–æ–±–∞–≤–ª—è–µ—Ç 6 —Å–∏–º–≤–æ–ª–æ–≤ –ø–µ—Ä–µ–¥ —É–∫–∞–∑–∞–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π, –≤—Ç–æ—Ä–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ www. –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ —É–∫–∞–∑–∞—Ç—å —Ç–æ –±—É–¥—É—Ç –ø—Ä–æ–±–µ–ª—ã.
console.log('vk'.padStart(6, 'www.')) // out: www.vk
// –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü —Å—Ç–æ–∫–∏
console.log('vk'.padEnd(6, '.com')) // out: vk.com
//_/_/_/ */

// // –ø–æ–º–µ–Ω—è—Ç—å –±—É–∫–≤—ã –º–µ—Å—Ç–∞–º–∏
// let nameBrienna = 'Brienna'.split('').reverse().join('')
// console.log(nameBrienna)

//_/_/_/

// // –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —á–∞—Å—Ç—å —Å—Ç—Ä–æ–∫–∏
// let str = 'hello'
// console.log(str.slice(1, 4)) // ell

//_/_/_/_/_/_/_/_/_/_/_/   NUMBER 0-9  _/_/_/_/_/_/_/_/_/_/_/_/

// // —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ.
// //(0 - 0, 9), —É–º–Ω–æ–∂–∞–µ–º –Ω–∞ 5(0 - 4, 9), –æ–∫—Ä—É–≥–ª—è–µ–º –≤–Ω–∏–∑(0 - 4)
// console.log(Math.floor(Math.random() * 5)) // 0 - 4
// console.log(Math.ceil(Math.random() * 5)) // 1 - 5

//_/_/_/

// // —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–∏—Å–ª–∞ –Ω–∞ —á–µ—Ç–Ω–æ—Å—Ç—å
// const isEven = n => n % 2 == 0

//_/_/_/

// // –ß—Ç–æ–±—ã —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π –±–∏–Ω–∞—Ä–Ω—ã–º –ø–æ–∏—Å–∫–æ–º, –º—ã –º–æ–∂–µ–º –≤–∑—è—Ç—å –ª–æ–≥–∞—Ä–∏—Ñ–º:
// console.log(Math.log2(4000000000))

//_/_/_/_/_/_/_/_/_/_/_/   FUNCTION() {}  _/_/_/_/_/_/_/_/_/_/_/_/

/* //_/_/_/
// –±–ª–∞–≥–æ–¥–æ—Ä—è —Ç–∞–∫–æ–º—É —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—É –º—ã –º–æ–∂–µ–º –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –∏ –∏–∑–º–µ–Ω—è—Ç—å —Å—Ç—Ä–æ—á–∫–∏
function tag(strings, name, age) {
  const [s1, s2, s3] = strings
  const ageStr = age > 42 ? '—Å—Ç–∞—Ä—à–∏–º' : '–º–ª–∞–¥—à–∏–º'
  return `${s1}${name}${s2}${ageStr}${s3}`
}
const person = {
  name: 'Max',
  age: 50,
}
const output = tag`–ß–µ–ª–æ–≤–µ–∫ –ø–æ –∏–º–µ–Ω–∏ ${person.name} —è–≤–ª—è–µ—Ç—å—Å—è ${person.age} –≤ —Å–µ–º—å–µ!`
console.log(output) // –ß–µ–ª–æ–≤–µ–∫ –ø–æ –∏–º–µ–Ω–∏ Max —è–≤–ª—è–µ—Ç—å—Å—è —Å—Ç–∞—Ä—à–∏–º –≤ —Å–µ–º—å–µ!
//_/_/_/ */

// // // —Ñ –ø—Ä–∏–Ω–∏–º–∞—é—â–∞—è –ª—é–±—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —á–µ—Ä–µ–∑ ...arguments
// function sumFn() {
//   return [...arguments].reduce((acc, val) => acc + val)
// }
// console.log(sumFn(16, 34, 5, 13, -6, 24, 6, 51, 555))

//_/_/_/

// // [...arguments] –£ –ª—é–±–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π arguments, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: arguments ‚Äì –æ–±—ä–µ–∫—Ç, –ø–æ—Ö–æ–∂–∏–π –Ω–∞ –º–∞—Å—Å–∏–≤. –û–Ω –∏—Ç–µ—Ä–∏—Ä—É–µ–º, –∏–º–µ–µ—Ç —á–∏—Å–ª–æ–≤—ã–µ –∏–Ω–¥–µ–∫—Å—ã, –Ω–æ, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å .forEach(). –ß—Ç–æ–±—ã –æ–±–µ—Ä–Ω—É—Ç—å –µ–≥–æ –≤ –º–∞—Å—Å–∏–≤, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä ...
// function sortFn() {
//   const x = [...arguments].sort((a, b) => a - b)
//   console.log(`sort -> ${x}`)
//   return x
// }
// sortFn(16, 3, 5, 8, 13, 6, -12, 38, 55, 46, 789, 12, 4545, 12, 884, -5, -1, -1)

//_/_/_/

// // –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏—Å–≤–æ–µ–Ω–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
// let plusFive = number => {
//   return number + 5
// }
// let f = plusFive
// plusFive(3) // 8
// // –ø–æ—Å–∫–æ–ª—å–∫—É f –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –µ–µ –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å.
// f(9) // 14

//_/_/_/

// // –§—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ - callback function
// // —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —á–µ—Ç–Ω–æ—Å—Ç—å
// const isEven = n => {
//   return n % 2 == 0
// }
// // —Å–æ–∑–¥–∞–µ–º —Ñ-–∏—é –ø—Ä–∏–Ω–∏–º–∞—é—â—É—é –¥—Ä—É–≥—É—é —Ñ-–∏—é –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –≤—Ç–æ—Ä–æ–π —Ñ-–∏–∏
// let printMsg = (evenFunc, n) => {
//   const isNumEven = evenFunc(n) // –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É true/false
//   console.log(`The number ${n} is an even number: ${isNumEven}.`)
// }
// //–ü–µ—Ä–µ–¥–∞–µ–º isEven –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
// printMsg(isEven, 4) // The number 4 is an even number: True.

//_/_/_/

// // —Å–æ–∑–¥–µ–º —Å–Ω–∞—á–∞–ª–æ –ø—Ä–æ—Å—Ç–æ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—á–∞—Ç–∞–µ—Ç —Å—Ç—Ä–æ–∫—É
// const delayedHello = () => {
//   console.log('Hi! This is an asynchronous greeting!')
// }
// // –≤—ã–∑—ã–≤–∞–µ–º setTimeout() —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞. –ü–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ, —á–µ—Ä–µ–∑ –¥–≤–µ —Å–µ–∫—É–Ω–¥—ã delayedHello() –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω
// setTimeout(delayedHello, 2000)

//_/_/_/

// // –∑–∞–º—ã–∫–∞–Ω–∏–µ
// const add = x => y => {
//   const z = x + y
//   console.log(x + ' + ' + y + ' = ' + z)
//   return add(z)
// }
// add(1)(4)(6)(9)(3)
// // 1 + 4 = 5
// // 5 + 6 = 11
// // 11 + 9 = 20
// // 20 + 3 = 23

//_/_/_/_/_/_/_/_/_/_/_/   CLASS {constructor}  _/_/_/_/_/_/_/_/_/_/_/_/

/* //_/_/_/
// –ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –≤ –∫–ª–∞—Å—Å-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–µ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:
class Animals {
  constructor(name, age) {
    this.name = name
    this.age = age
  }
  sing() {
    return `${this.name} can sing`
  }
  dance() {
    return `${this.name} can dance`
  }
}

class Cats extends Animals {
  constructor(name, age, whiskerColor) {
    super(name, age)
    this.whiskerColor = whiskerColor
  }
  whiskers() {
    return `I have ${this.whiskerColor} whiskers`
  }
}

let clara = new Cats('Clara', 33, 'indigo')
// –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Cats clara –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞ –∏ –º–µ—Ç–æ–¥—ã –∫–∞–∫ –∫–ª–∞—Å—Å–∞ Cats, —Ç–∞–∫ –∏ –∫–ª–∞—Å—Å–∞ Animals.
console.log(clara.sing()) // "Clara can sing"
console.log(clara.whiskers()) // "I have indigo whiskers"

// –ü–µ—Ä–µ–ø–∏—à–µ–º —ç—Ç–æ—Ç –∫–æ–¥ –≤ –ø—Ä–æ—Ç–æ—Ç–∏–ø–Ω–æ–º —Å—Ç–∏–ª–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ Object.create()
function Animals(name, age) {
  let newAnimal = Object.create(animalConstructor)
  newAnimal.name = name
  newAnimal.age = age
  return newAnimal
}

let animalConstructor = {
  sing: function () {
    return `${this.name} can sing`
  },
  dance: function () {
    return `${this.name} can dance`
  },
}

function Cats(name, age, whiskerColor) {
  let newCat = Animals(name, age)
  Object.setPrototypeOf(newCat, catConstructor)
  newCat.whiskerColor = whiskerColor
  return newCat
}

let catConstructor = {
  whiskers() {
    return `I have ${this.whiskerColor} whiskers`
  },
}

Object.setPrototypeOf(catConstructor, animalConstructor)
const clara = Cats('Clara', 33, 'purple')
clara.sing() // "Clara can sing"
clara.whiskers() // "I have purple whiskers"
//_/_/_/ */

// class Square {
//   constructor(size) {
//     this.size = size
//   }
//   set size(value) {
//     // —Å–µ—Ç—Ç–µ—Ä, —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –∑–∞–ø–∏—Å–∏
//     this._size = value // –ü—Ä–∏–≤–∞—Ç–Ω–æ–µ –ø–æ–ª–µ
//   }
//   get area() {
//     // –≥–µ—Ç—Ç–µ—Ä, —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏
//     return this._size ** 2
//   }
// }
// const box = new Square(3)
// console.log(box.area) // 9
// box.size = 5 // –Ω–µ–ª—å–∑—è –∑–∞–¥–∞–≤–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é
// console.log(box.size) // undefined

//_/_/_/

// // classes/static-methods
// // –í –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–º –≤—ã—à–µ –ø—Ä–∏–º–µ—Ä–µ –º—ã —Å–æ–∑–¥–∞–µ–º static –º–µ—Ç–æ–¥ —Å –∏–º–µ–Ω–µ–º,.generateName()–∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∏–º—è. –ò–∑-–∑–∞ static –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ –º—ã –º–æ–∂–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø, .generateName()—Ç–æ–ª—å–∫–æ –¥–æ–±–∞–≤–∏–≤ –µ–≥–æ –∫ Animal –∫–ª–∞—Å—Å—É:
// class Animal {
//   constructor(name) {
//     this._name = name
//     this._behavior = 0
//   }
//   static generateName() {
//     const names = ['Angel', 'Spike', 'Buffy', 'Willow', 'Tara']
//     const randomNumber = Math.floor(Math.random() * 5)
//     return names[randomNumber]
//   }
// }
// // –ú—ã –≤—ã–∑—ã–≤–∞–µ–º .generateName() –º–µ—Ç–æ–¥ —Å–æ —Å–ª–µ–¥—É—é—â–∏–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º:
// console.log(Animal.generateName())
// // —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ –Ω–µ –º–æ–∂–µ—Ç –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å—Ç–∞—Ç–∏–∫ –º–µ—Ç–æ–¥—É –∫–ª–∞—Å—Å–∞
// // Uncaught TypeError: tyson.generateName is not a function
// const tyson = new Animal('Tyson')
// tyson.generateName() // Uncaught TypeError

//_/_/_/_/_/_/_/_/_/_/_/   JS + <HTML/>   _/_/_/_/_/_/_/_/_/_/_/_/

// // out in html - –≤ JS document.write —Å —Ç–µ–≥–∞–º–∏ h1
// document.write('<h1>–≤ JS document.write —Å —Ç–µ–≥–∞–º–∏ h1</h1>')

//_/_/_/

// —Å—á–µ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
// document.querySelector('.button').onclick = () => console.log('–Ω–∞–∂–∞–ª')

/* //_/_/_/
// // –°–ø–æ—Å–æ–± –ø—Ä–æ–≤–µ—Ä–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤ W3C DOM –ø–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–¥, –∑–∞–≤–∏—Å—è—â–∏–π –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —ç—Ç–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏.
// if (document.getElementById && document.getElementsByTagName) {
//   // –µ—Å–ª–∏ –º–µ—Ç–æ–¥—ã getElementById –∏ getElementsByTagName
//   // –¥–æ—Å—Ç—É–ø–Ω—ã, —Ç–æ –º–æ–∂–Ω–æ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ç–æ—á–Ω–æ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É W3CDOM.


//   obj = document.getElementById('navigation')
//   // –¥–∞–ª–µ–µ –∏–¥—ë—Ç –¥—Ä—É–≥–æ–π –∫–æ–¥ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π W3CDOM.
//   // ‚Ä¶.
// }
// // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–ª–µ–Ω–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π DOM –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –≤–µ–±-–±—Ä–∞—É–∑–µ—Ä–µ.
// function domImplementationTest() {
//   var featureArray = [
//     'HTML',
//     'XML',
//     'Core',
//     'Views',
//     'StyleSheets',
//     'CSS',
//     'CSS2',
//     'Events',
//     'UIEvents',
//     'MouseEvents',
//     'HTMLEvents',
//     'MutationEvents',
//     'Range',
//     'Traversal',
//   ]
//   var versionArray = ['1.0', '2.0', '3.0']
//   var i
//   var j
//   if (document.implementation && document.implementation.hasFeature) {
//     for (i = 0; i < featureArray.length; i++) {
//       for (j = 0; j < versionArray.length; j++) {
//         document.write(
//           '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è ' +
//             featureArray[i] +
//             ' –≤–µ—Ä—Å–∏–∏ ' +
//             versionArray[j] +
//             ': ' +
//             (document.implementation.hasFeature(featureArray[i], versionArray[j])
//               ? '<span style="color:green">true</span>'
//               : '<span style="color:red">false</span>') +
//             '<br/>'
//         )
//       }
//       document.write('<br/>')
//     }
//   }
// }
//_/_/_/ */

// function addButtons(numButtons) {
//   for (var i = 0; i < numButtons; i++) {
//     var button = document.createElement('input')
//     button.type = 'button'
//     button.value = 'Button ' + (i + 1)
//     // –ò—Å–ø–æ–ª—å–∑—É–µ–º —à–∞–±–ª–æ–Ω Immediately-Invoked Function Expression (IIFE) –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∂–µ–ª–∞–µ–º–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è:
//     button.onclick = (buttonIndex => {
//       return () => alert('Button ' + (buttonIndex + 1) + ' clicked') // c return () => –∞–ª–µ—Ä—Ç –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç—å—Å—è —Å—Ä–∞–∑—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
//     })(i) // –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º i
//     document.body.appendChild(button)
//     document.body.appendChild(document.createElement('br'))
//   }
// }
// window.onload = () => addButtons(5)

//_/_/_/_/_/_/_/_/_/_/_/   PROMISE (res, rej)   _/_/_/_/_/_/_/_/_/_/_/_/

// //  promises 2020
// // —Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥ for of await. –ñ–¥–µ—Ç –∫–æ–≥–¥–∞ –≤—Å–µ –ø—Ä–æ–º–∏—Å—ã –∑–∞—Ä–µ–∑–æ–ª–≤—è—Ç—å—Å—è –∏ –≤—ã–≤–æ–¥ –∏—Ö —Ä–∞–∑–æ–º.
// const emulate = (id, ms) =>
//   new Promise(resolve => {
//     setTimeout(() => resolve(id), ms)
//   })
// const promises = [emulate(1, 250), emulate(2, 500), emulate(3, 1500)]
// async function old() {
//   for (const promise of await Promise.all(promises)) {
//     console.log('old:', promise)
//   }
// }
// // –Ω–æ–≤—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å for await. –ú—ã –Ω–µ –∂–¥–µ–º –∫–æ–≥–¥–∞ –≤—Å–µ –ø—Ä–æ–º–∏—Å—ã –∑–∞—Ä–µ–∑–æ–ª–≤—è—Ç—å—Å—è –∞ –≤—ã–≤–æ–¥–∏–º –∏—Ö –ø–æ –º–µ—Ä–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏. –ü—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ for of –≤—ã–≤–æ–¥–∏—Ç —Å—Ç–∞—Ç—É—Å pending –≤—Å–µ—Ö –ø—Ä–æ–º–∏—Å–æ–≤.
// async function modern() {
//   for await (const promise of promises) {
//     console.log('moderm:', promise)
//   }
// }
// modern()
// // old()

//_/_/_/

// const inventory = {
//   sunglasses: 1900,
//   pants: 1088,
//   bags: 1344,
// }
// // —Å–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å —É—Å–ª–æ–≤–∏—è–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—ä–µ–∫—Ç–∞, –¥–ª—è resolve, reject.
// function myExecutor(resolve, reject) {
//   if (inventory.sunglasses > 0) {
//     resolve('Sunglasses order processed.')
//   } else {
//     reject('That item is sold out.')
//   }
// }
// //—Å–æ–∑–¥–∞–µ–º —Ñ-–∏—é –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é –Ω–æ–≤—ã–π –ø—Ä–æ–º–∏—Å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º (—Ñ-–∏—è —Å res, rej)
// function orderSunglasses() {
//   return new Promise(myExecutor)
// }
// console.log(orderSunglasses()) // Promise { 'Sunglasses order processed.' }

//_/_/_/

// // setTimeout()–¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–±–µ—â–∞–Ω–∏–π:
// const returnPromiseFunction = () => {
//   return new Promise((resolve, reject) => {
//     setTimeout(() => {
//       resolve('I resolved!')
//     }, 1000)
//   })
// }
// const prom = returnPromiseFunction()
// console.log(prom) // Promise { <pending> }

//_/_/_/_/_/_/_/_/_/_/_/   __PROTO__ | .PROTOTYPE   _/_/_/_/_/_/_/_/_/_/_/_/

// let shogun = new Samurai('segun')
// console.log(shogun.__proto__ !== Function.prototype)
// console.log(shogun.__proto__ === Samurai.prototype)
// console.log(shogun.__proto__.__proto__ === Samurai.prototype.__proto__)
// console.log(shogun.__proto__.constructor.__proto__ === Samurai.prototype.constructor.__proto__)
// console.log(shogun)
// console.log(shogun.__proto__)
// console.log(shogun.__proto__.constructor)
//
// console.log(shogun.__proto__.__proto__.__proto__)
// console.log(shogun.__proto__.__proto__)
// console.log(shogun.__proto__)
// console.log(shogun)
//
// console.log(Samurai.prototype !== Object.prototype)
// console.log(Samurai.prototype !== Function.prototype)

//_/_/_/_/_/_/_/_/_/_/_/   OBJECT   _/_/_/_/_/_/_/_/_/_/_/_/

/* //_/_/_/
// –û–±—ä–µ–∫—Ç—ã 2020

// Object.getOwnPropertyDescriptor
const person = {
  name: 'Max',
  age: 30,
}
console.log(Object.getOwnPropertyDescriptor(person, 'name')) // { value: 'Max', writable: true, enumerable: true, configurable: true }
console.log(Object.getOwnPropertyDescriptors(person)) // –æ–ø–∏—Å–∞–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤ –≤—Å–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞

// Object.entries –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ –º–∞—Å—Å–∏–≤–æ–≤, –≥–¥–µ –∫–∞–∂–¥—ã–π –º–∞—Å—Å–∏–≤ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 2—Ö —ç–ª–ª–µ–º–µ–Ω—Ç–æ–≤, –≥–¥–µ 0 –∏–Ω–¥–µ–∫—Å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª—é—á–∞ –∞ 1 –∏–Ω–¥–µ–∫—Å –∑–Ω–∞—á–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –∫–ª—é—á–∞.
console.log(Object.entries(person)) // [ [ 'name', 'Max' ], [ 'age', 30 ] ]

// –æ–±—Ä–∞—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ, –ø–µ—Ä–µ–¥–∞–µ–º –≤–ª–æ–∂–µ–Ω—ã–π –º–∞—Å—Å–∏–≤ entries:
// [ [ 'name', 'Max' ], [ 'age', 30 ] ],
console.log(
  Object.fromEntries([
    ['name', 'Max'],
    ['age', 30],
  ])
)
// –Ω–∞ –≤—ã—Ö–æ–¥–µ –ø–æ–ª—É—á–∞–µ–º –Ω–∞—à –æ–±—ä–µ–∫—Ç person
// out: { name: 'Max', age: 30 }

// –ø–µ—Ä–µ–≤–æ–¥ –≤ entries –∏ –æ–±—Ä–∞—Ç–Ω–æ –≤ –æ–±—ä–µ–∫—Ç person
console.log(Object.fromEntries(Object.entries(person)))

console.log(Object.entries(['M', 'A', 'X']))
// out: [ [ '0', 'M' ], [ '1', 'A' ], [ '2', 'X' ] ]

// –¥–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä–∏–∑–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –Ω–∞ key –∏ value
for (const [key, value] of Object.entries(person)) {
  console.log(key, value)
}
//out:
// name Max
// age 30

// –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç JavaScript Object Notation (JSON)
for (const [key, value] of Object.entries(person)) {
  console.log(`${JSON.stringify(key)}: ${JSON.stringify(value)}`)
}
//out:
// "name": "Max"
// "age": 30

// –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ—Å—Ç–∞–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –æ–±—ä–µ–∫—Ç–∞
console.log(Object.values(person)) // out: [ 'Max', 30 ]

// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∫–ª—é—á–µ–π –∏–∑ –æ–±—ä–µ–∫—Ç–∞
console.log(Object.keys(person)) // [ 'name', 'age' ]
//_/_/_/ */
